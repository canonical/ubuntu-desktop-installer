// Mocks generated by Mockito 5.0.14 from annotations
// in ubuntu_desktop_installer/test/who_are_you_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ubuntu_desktop_installer/pages/who_are_you/who_are_you_model.dart'
    as _i2;
import 'package:ubuntu_wizard/utils.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [WhoAreYouModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockWhoAreYouModel extends _i1.Mock implements _i2.WhoAreYouModel {
  MockWhoAreYouModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get realName =>
      (super.noSuchMethod(Invocation.getter(#realName), returnValue: '')
          as String);
  @override
  set realName(String? value) =>
      super.noSuchMethod(Invocation.setter(#realName, value),
          returnValueForMissingStub: null);
  @override
  String get hostname =>
      (super.noSuchMethod(Invocation.getter(#hostname), returnValue: '')
          as String);
  @override
  set hostname(String? value) =>
      super.noSuchMethod(Invocation.setter(#hostname, value),
          returnValueForMissingStub: null);
  @override
  String get username =>
      (super.noSuchMethod(Invocation.getter(#username), returnValue: '')
          as String);
  @override
  set username(String? value) =>
      super.noSuchMethod(Invocation.setter(#username, value),
          returnValueForMissingStub: null);
  @override
  String get password =>
      (super.noSuchMethod(Invocation.getter(#password), returnValue: '')
          as String);
  @override
  set password(String? value) =>
      super.noSuchMethod(Invocation.setter(#password, value),
          returnValueForMissingStub: null);
  @override
  String get confirmedPassword => (super
          .noSuchMethod(Invocation.getter(#confirmedPassword), returnValue: '')
      as String);
  @override
  set confirmedPassword(String? value) =>
      super.noSuchMethod(Invocation.setter(#confirmedPassword, value),
          returnValueForMissingStub: null);
  @override
  _i3.PasswordStrength get passwordStrength =>
      (super.noSuchMethod(Invocation.getter(#passwordStrength),
          returnValue: _i3.PasswordStrength.weak) as _i3.PasswordStrength);
  @override
  _i2.LoginStrategy get loginStrategy =>
      (super.noSuchMethod(Invocation.getter(#loginStrategy),
          returnValue: _i2.LoginStrategy.requirePassword) as _i2.LoginStrategy);
  @override
  set loginStrategy(_i2.LoginStrategy? value) =>
      super.noSuchMethod(Invocation.setter(#loginStrategy, value),
          returnValueForMissingStub: null);
  @override
  bool get isValid =>
      (super.noSuchMethod(Invocation.getter(#isValid), returnValue: false)
          as bool);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i4.Future<void> loadIdentity() =>
      (super.noSuchMethod(Invocation.method(#loadIdentity, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> saveIdentity({String? salt}) =>
      (super.noSuchMethod(Invocation.method(#saveIdentity, [], {#salt: salt}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void addListener(_i5.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i5.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
