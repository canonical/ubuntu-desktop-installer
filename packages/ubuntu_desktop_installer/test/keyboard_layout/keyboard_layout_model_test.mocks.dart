// Mocks generated by Mockito 5.0.14 from annotations
// in ubuntu_desktop_installer/test/keyboard_layout/keyboard_layout_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:subiquity_client/subiquity_client.dart' as _i3;
import 'package:ubuntu_desktop_installer/services/keyboard_service.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [KeyboardService].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeyboardService extends _i1.Mock implements _i2.KeyboardService {
  MockKeyboardService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.KeyboardLayout> get layouts =>
      (super.noSuchMethod(Invocation.getter(#layouts),
          returnValue: <_i3.KeyboardLayout>[]) as List<_i3.KeyboardLayout>);
  @override
  set layouts(List<_i3.KeyboardLayout>? _layouts) =>
      super.noSuchMethod(Invocation.setter(#layouts, _layouts),
          returnValueForMissingStub: null);
  @override
  _i4.Future<void> load(_i3.SubiquityClient? client) =>
      (super.noSuchMethod(Invocation.method(#load, [client]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
