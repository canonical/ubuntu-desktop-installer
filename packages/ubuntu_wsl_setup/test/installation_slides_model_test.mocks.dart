// Mocks generated by Mockito 5.3.2 from annotations
// in ubuntu_wsl_setup/test/installation_slides_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:subiquity_client/src/endpoint.dart' as _i5;
import 'package:subiquity_client/src/status_monitor.dart' as _i2;
import 'package:subiquity_client/src/types.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SubiquityStatusMonitor].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubiquityStatusMonitor extends _i1.Mock
    implements _i2.SubiquityStatusMonitor {
  MockSubiquityStatusMonitor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.ApplicationStatus?> get onStatusChanged => (super.noSuchMethod(
        Invocation.getter(#onStatusChanged),
        returnValue: _i3.Stream<_i4.ApplicationStatus?>.empty(),
      ) as _i3.Stream<_i4.ApplicationStatus?>);
  @override
  _i3.Future<bool> start(_i5.Endpoint? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #start,
          [endpoint],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
